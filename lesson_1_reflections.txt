How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Diff outputs + and - signs in front of each line added/removed giving us a view on what changed in the source.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	With complete history of changes at hand you can see who did what and when in the source code. You can see what might have caused issues.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    With google docs you will only have "revisions" on a per file basis. With SCM file changes are grouped logically and not by time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git helps grouping changes logically and lets you go back in the past in your whole project, not just one source file. In google docs a unit of work is one file, not a group of files.

How can you use the commands git log and git diff to view the history of files?

    Git log will display last revisions in the repository and the diff helps identify what has changed between revisions.

How might using version control make you more confident to make changes that
could break something?

    With version control you are not afraid of deleting something in the code or adding breaking changes since you can always look up /revert to a working code base at any moment.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to learn using git not only for working alone but to learn syncing with my peer developers.

